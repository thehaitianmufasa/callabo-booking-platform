{
  "name": "Multi-Tenant Customer Onboarding Workflow",
  "id": "customer-onboarding-multitenant",
  "version": "2.0.0",
  "description": "Enhanced customer onboarding automation with multi-tenant support, agent workflow integration, and Hasura event triggers",
  "nodes": [
    {
      "parameters": {
        "path": "start-onboarding",
        "options": {
          "responseMode": "responseNode"
        },
        "authentication": "none"
      },
      "name": "Onboarding Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [200, 400],
      "id": "onboarding-webhook",
      "notes": "Triggered by user registration or manual onboarding start"
    },
    {
      "parameters": {
        "functionCode": "// Extract and validate onboarding context\nconst input = $input.item.json;\n\n// Required fields validation\nif (!input.user_id || !input.tenant_id || !input.email) {\n  throw new Error('Missing required fields: user_id, tenant_id, or email');\n}\n\n// Determine onboarding type and customize flow\nconst onboardingType = input.registration_type || 'standard';\nconst isOwner = onboardingType === 'new_tenant';\nconst isMember = onboardingType === 'existing_tenant';\n\n// Create customized onboarding plan based on role and tenant type\nconst onboardingPlan = {\n  user_id: input.user_id,\n  tenant_id: input.tenant_id,\n  email: input.email,\n  onboarding_type: onboardingType,\n  is_owner: isOwner,\n  is_member: isMember,\n  start_date: new Date().toISOString(),\n  current_step: 1,\n  total_steps: isOwner ? 8 : 6, // Owners get additional tenant setup steps\n  status: 'started',\n  trigger_source: input.trigger_source || 'manual',\n  workflow_execution_id: input.workflow_execution_id || $execution.id\n};\n\n// Create role-specific checklist\nconst checklist = {\n  profile_complete: false,\n  email_verified: false,\n  first_login: false,\n  tutorial_completed: false,\n  team_setup: isOwner ? false : null,\n  billing_setup: isOwner ? false : null,\n  integrations_explored: false,\n  first_project_created: false,\n  support_contact_made: false\n};\n\nreturn {\n  json: {\n    ...onboardingPlan,\n    checklist,\n    customization: {\n      welcome_message: isOwner ? 'Welcome to your new workspace!' : 'Welcome to the team!',\n      primary_cta: isOwner ? 'Set up your workspace' : 'Complete your profile',\n      focus_areas: isOwner ? ['workspace_setup', 'team_management', 'billing'] : ['profile', 'learning', 'collaboration']\n    }\n  }\n};"
      },
      "name": "Process Onboarding Context",
      "type": "n8n-nodes-base.function",
      "position": [400, 400],
      "id": "process-context",
      "notes": "Validates input and creates role-specific onboarding plan"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Get tenant and user information for personalization\nSELECT \n  t.id as tenant_id,\n  t.name as tenant_name,\n  t.slug as tenant_slug,\n  t.plan_type,\n  u.id as user_id,\n  u.email,\n  u.first_name,\n  u.last_name,\n  u.timezone,\n  u.locale,\n  tu.role as user_role,\n  tu.joined_at,\n  (SELECT COUNT(*) FROM tenant_users WHERE tenant_id = t.id AND status = 'active') as team_size\nFROM tenants t\nJOIN tenant_users tu ON t.id = tu.tenant_id\nJOIN users u ON tu.user_id = u.id\nWHERE t.id = $1 AND u.id = $2 AND tu.status = 'active'",
        "additionalFields": {
          "mode": "list",
          "queryParams": "={{$json.tenant_id}},={{$json.user_id}}"
        }
      },
      "name": "Get User & Tenant Info",
      "type": "n8n-nodes-base.postgres",
      "credentials": {
        "postgres": {
          "id": "supabase-postgres-main",
          "name": "Supabase Multi-Tenant DB"
        }
      },
      "position": [600, 400],
      "id": "get-user-tenant-info",
      "notes": "Fetch complete user and tenant context"
    },
    {
      "parameters": {
        "operation": "upsert",
        "table": "user_onboarding", 
        "columns": "tenant_id,user_id,email,start_date,current_step,total_steps,checklist,status",
        "conflictColumns": "tenant_id,user_id",
        "additionalFields": {
          "returnFields": "id,current_step,checklist,status",
          "updateOnConflict": true
        }
      },
      "name": "Create/Update Onboarding Record",
      "type": "n8n-nodes-base.postgres",
      "credentials": {
        "postgres": {
          "id": "supabase-postgres-main",
          "name": "Supabase Multi-Tenant DB"
        }
      },
      "position": [800, 400],
      "id": "create-onboarding-record",
      "notes": "Create or update onboarding progress in database"
    },
    {
      "parameters": {
        "endpoint": "${HASURA_GRAPHQL_ENDPOINT}",
        "query": "mutation CreateWorkflowExecution($object: workflow_executions_insert_input!) {\n  insert_workflow_executions_one(object: $object) {\n    id\n    n8n_execution_id\n    status\n    started_at\n  }\n}",
        "variables": {
          "object": {\n            "tenant_id": "={{ $node['Process Onboarding Context'].json.tenant_id }}",\n            "workflow_id": "{{ $workflow.id }}",\n            "triggered_by": "={{ $node['Process Onboarding Context'].json.user_id }}",\n            "n8n_execution_id": "{{ $execution.id }}",\n            "input_data": "={{ $node['Process Onboarding Context'].json }}",\n            "status": "running"\n          }\n        },\n        "headers": {\n          "x-hasura-admin-secret": "${HASURA_ADMIN_SECRET}",\n          "Content-Type": "application/json"\n        }
      },\n      "name": "Track Workflow Execution",\n      "type": "n8n-nodes-base.graphql",\n      "credentials": {\n        "httpHeaderAuth": {\n          "id": "hasura-admin",\n          "name": "Hasura Admin Access"\n        }\n      },\n      "position": [1000, 400],\n      "id": "track-workflow-execution",\n      "notes": "Record workflow execution in Hasura for monitoring"\n    },\n    {\n      "parameters": {\n        "to": "={{$node['Get User & Tenant Info'].json[0].email}}",\n        "subject": "🎉 Welcome to {{$node['Get User & Tenant Info'].json[0].tenant_name}} - Let's get started!",\n        "html": "<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <title>Welcome to {{$node['Get User & Tenant Info'].json[0].tenant_name}}</title>\\n  <style>\\n    body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 0; padding: 0; background-color: #f8fafc; }\\n    .container { max-width: 650px; margin: 0 auto; background-color: white; }\\n    .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 40px 30px; text-align: center; }\\n    .header h1 { margin: 0; font-size: 32px; font-weight: 300; }\\n    .content { padding: 40px 30px; }\\n    .welcome-section { margin-bottom: 30px; }\\n    .tenant-card { background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; padding: 25px; border-radius: 12px; margin: 25px 0; text-align: center; }\\n    .role-badge { background: rgba(255,255,255,0.2); padding: 8px 16px; border-radius: 20px; display: inline-block; margin-top: 10px; }\\n    .checklist { background-color: #f7fafc; padding: 25px; border-radius: 12px; margin: 25px 0; }\\n    .checklist h3 { color: #2d3748; margin-top: 0; display: flex; align-items: center; }\\n    .checklist h3::before { content: '📋'; margin-right: 10px; }\\n    .checklist-item { display: flex; align-items: center; padding: 12px 0; border-bottom: 1px solid #e2e8f0; }\\n    .checklist-item:last-child { border-bottom: none; }\\n    .checklist-item .icon { width: 24px; height: 24px; border: 2px solid #cbd5e0; border-radius: 50%; margin-right: 15px; display: flex; align-items: center; justify-content: center; }\\n    .checklist-item.priority .icon { border-color: #f56565; background-color: #fed7d7; }\\n    .cta-section { text-align: center; margin: 35px 0; }\\n    .cta-button { display: inline-block; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 16px 32px; text-decoration: none; border-radius: 8px; font-weight: 600; font-size: 16px; margin: 10px; box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4); }\\n    .cta-button:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6); }\\n    .cta-button.secondary { background: linear-gradient(135deg, #48bb78 0%, #38a169 100%); box-shadow: 0 4px 15px rgba(72, 187, 120, 0.4); }\\n    .team-section { background: linear-gradient(135deg, #e0f2fe 0%, #b3e5fc 100%); padding: 25px; border-radius: 12px; margin: 25px 0; }\\n    .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 20px; margin: 20px 0; }\\n    .stat-card { background: white; padding: 20px; border-radius: 8px; text-align: center; box-shadow: 0 2px 8px rgba(0,0,0,0.1); }\\n    .stat-number { font-size: 24px; font-weight: bold; color: #667eea; margin-bottom: 5px; }\\n    .stat-label { font-size: 14px; color: #718096; }\\n    .footer { background-color: #2d3748; color: white; padding: 30px; text-align: center; }\\n    .footer-links { margin: 20px 0; }\\n    .footer-links a { color: #90cdf4; text-decoration: none; margin: 0 15px; }\\n    .progress-bar { background: #e2e8f0; height: 8px; border-radius: 4px; overflow: hidden; margin: 20px 0; }\\n    .progress-fill { background: linear-gradient(90deg, #667eea, #764ba2); height: 100%; width: 12.5%; transition: width 0.3s ease; }\\n  </style>\\n</head>\\n<body>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header\\\">\\n      <h1>{{$node['Process Onboarding Context'].json.customization.welcome_message}}</h1>\\n      <p>You're now part of something amazing! Let's get you set up for success.</p>\\n    </div>\\n    \\n    <div class=\\\"content\\\">\\n      <div class=\\\"welcome-section\\\">\\n        <p style=\\\"font-size: 18px; color: #2d3748;\\\">Hi {{$node['Get User & Tenant Info'].json[0].first_name || 'there'}},</p>\\n        <p>Welcome to <strong>{{$node['Get User & Tenant Info'].json[0].tenant_name}}</strong>! We're excited to have you join our platform and help you build amazing AI-powered applications.</p>\\n      </div>\\n      \\n      <div class=\\\"tenant-card\\\">\\n        <h3 style=\\\"margin: 0; font-size: 24px;\\\">🏢 Your Workspace</h3>\\n        <p style=\\\"margin: 10px 0; opacity: 0.9;\\\"><strong>{{$node['Get User & Tenant Info'].json[0].tenant_name}}</strong></p>\\n        <p style=\\\"margin: 5px 0; opacity: 0.8;\\\">Workspace ID: {{$node['Get User & Tenant Info'].json[0].tenant_slug}}</p>\\n        <div class=\\\"role-badge\\\">\\n          <strong>{{$node['Get User & Tenant Info'].json[0].user_role === 'owner' ? '👑 Owner' : '👤 ' + $node['Get User & Tenant Info'].json[0].user_role}}</strong>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"progress-section\\\">\\n        <h3>📈 Your Progress</h3>\\n        <div class=\\\"progress-bar\\\">\\n          <div class=\\\"progress-fill\\\"></div>\\n        </div>\\n        <p style=\\\"text-align: center; color: #718096;\\\">Step 1 of {{$node['Process Onboarding Context'].json.total_steps}} • 12.5% Complete</p>\\n      </div>\\n      \\n      <div class=\\\"checklist\\\">\\n        <h3>Your Onboarding Journey</h3>\\n        <div class=\\\"checklist-item priority\\\">\\n          <div class=\\\"icon\\\">1</div>\\n          <div>\\n            <strong>Complete Your Profile</strong>\\n            <div style=\\\"font-size: 14px; color: #718096; margin-top: 5px;\\\">Add your details and preferences to personalize your experience</div>\\n          </div>\\n        </div>\\n        <div class=\\\"checklist-item\\\">\\n          <div class=\\\"icon\\\">2</div>\\n          <div>\\n            <strong>Verify Your Email</strong>\\n            <div style=\\\"font-size: 14px; color: #718096; margin-top: 5px;\\\">Confirm your email address for security and notifications</div>\\n          </div>\\n        </div>\\n        <div class=\\\"checklist-item\\\">\\n          <div class=\\\"icon\\\">3</div>\\n          <div>\\n            <strong>Take the Interactive Tutorial</strong>\\n            <div style=\\\"font-size: 14px; color: #718096; margin-top: 5px;\\\">Learn the platform basics with our step-by-step guide</div>\\n          </div>\\n        </div>\\n        {{#if ($node['Process Onboarding Context'].json.is_owner)}}\\n        <div class=\\\"checklist-item\\\">\\n          <div class=\\\"icon\\\">4</div>\\n          <div>\\n            <strong>Set Up Your Team</strong>\\n            <div style=\\\"font-size: 14px; color: #718096; margin-top: 5px;\\\">Invite team members and configure roles</div>\\n          </div>\\n        </div>\\n        <div class=\\\"checklist-item\\\">\\n          <div class=\\\"icon\\\">5</div>\\n          <div>\\n            <strong>Configure Billing</strong>\\n            <div style=\\\"font-size: 14px; color: #718096; margin-top: 5px;\\\">Set up your subscription and payment method</div>\\n          </div>\\n        </div>\\n        {{/if}}\\n        <div class=\\\"checklist-item\\\">\\n          <div class=\\\"icon\\\">{{$node['Process Onboarding Context'].json.is_owner ? '6' : '4'}}</div>\\n          <div>\\n            <strong>Create Your First Project</strong>\\n            <div style=\\\"font-size: 14px; color: #718096; margin-top: 5px;\\\">Start building with our AI agent workflows</div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"team-section\\\">\\n        <h3 style=\\\"margin-top: 0; color: #2d3748;\\\">👥 Team Overview</h3>\\n        <div class=\\\"stats-grid\\\">\\n          <div class=\\\"stat-card\\\">\\n            <div class=\\\"stat-number\\\">{{$node['Get User & Tenant Info'].json[0].team_size}}</div>\\n            <div class=\\\"stat-label\\\">Team Members</div>\\n          </div>\\n          <div class=\\\"stat-card\\\">\\n            <div class=\\\"stat-number\\\">{{$node['Get User & Tenant Info'].json[0].plan_type}}</div>\\n            <div class=\\\"stat-label\\\">Plan Type</div>\\n          </div>\\n          <div class=\\\"stat-card\\\">\\n            <div class=\\\"stat-number\\\">0</div>\\n            <div class=\\\"stat-label\\\">Projects</div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"cta-section\\\">\\n        <h3>Ready to get started?</h3>\\n        <a href=\\\"{{$node['Onboarding Webhook'].json.headers.host || 'https://app.callabo-platform.com'}}/onboarding?step=1&tenant={{$node['Get User & Tenant Info'].json[0].tenant_slug}}\\\" class=\\\"cta-button\\\">{{$node['Process Onboarding Context'].json.customization.primary_cta}}</a>\\n        <a href=\\\"{{$node['Onboarding Webhook'].json.headers.host || 'https://app.callabo-platform.com'}}/dashboard?tenant={{$node['Get User & Tenant Info'].json[0].tenant_slug}}\\\" class=\\\"cta-button secondary\\\">Explore Dashboard</a>\\n      </div>\\n      \\n      <div style=\\\"background: #f7fafc; padding: 25px; border-radius: 12px; margin: 25px 0;\\\">\\n        <h4 style=\\\"margin-top: 0; color: #2d3748;\\\">🎯 What's Next?</h4>\\n        <p>We'll send you helpful tips and guides over the next few days to help you get the most out of the platform. You can always:</p>\\n        <ul style=\\\"color: #4a5568;\\\">\\n          <li>📧 Reply to this email for personal support</li>\\n          <li>💬 Use our in-app chat for quick help</li>\\n          <li>📚 Browse our comprehensive documentation</li>\\n          <li>📞 Schedule a personalized onboarding call</li>\\n        </ul>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"footer\\\">\\n      <h4>Need Help?</h4>\\n      <p>Our team is here to ensure your success!</p>\\n      <div class=\\\"footer-links\\\">\\n        <a href=\\\"{{$node['Onboarding Webhook'].json.headers.host || 'https://app.callabo-platform.com'}}/help\\\">Help Center</a>\\n        <a href=\\\"{{$node['Onboarding Webhook'].json.headers.host || 'https://app.callabo-platform.com'}}/docs\\\">Documentation</a>\\n        <a href=\\\"mailto:support@callabo-platform.com\\\">Email Support</a>\\n        <a href=\\\"{{$node['Onboarding Webhook'].json.headers.host || 'https://app.callabo-platform.com'}}/book-call\\\">Book a Call</a>\\n      </div>\\n      <p style=\\\"font-size: 14px; opacity: 0.8; margin-top: 20px;\\\">\\n        © 2024 Callabo Platform. All rights reserved.<br>\\n        You're receiving this because you signed up for {{$node['Get User & Tenant Info'].json[0].tenant_name}}.\\n      </p>\\n    </div>\\n  </div>\\n</body>\\n</html>"\n      },\n      "name": "Send Welcome Email",\n      "type": "n8n-nodes-base.emailSend",\n      "credentials": {\n        "smtp": {\n          "id": "smtp-service",\n          "name": "SMTP Email Service"\n        }\n      },\n      "position": [1200, 400],\n      "id": "send-welcome-email",\n      "notes": "Send personalized welcome email with tenant context"\n    },\n    {\n      "parameters": {\n        "amount": 2,\n        "unit": "hours"\n      },\n      "name": "Wait 2 Hours",\n      "type": "n8n-nodes-base.wait",\n      "position": [1400, 400],\n      "id": "wait-2hours",\n      "notes": "Wait before sending first follow-up"\n    },\n    {\n      "parameters": {\n        "operation": "executeQuery",\n        "query": "-- Check onboarding progress\\nSELECT \\n  current_step,\\n  completion_percentage,\\n  checklist,\\n  status,\\n  (CASE \\n    WHEN checklist->>'profile_complete' = 'true' THEN 1 ELSE 0 \\n  END +\\n  CASE \\n    WHEN checklist->>'email_verified' = 'true' THEN 1 ELSE 0 \\n  END +\\n  CASE \\n    WHEN checklist->>'first_login' = 'true' THEN 1 ELSE 0 \\n  END) as completed_items\\nFROM user_onboarding \\nWHERE tenant_id = $1 AND user_id = $2",\n        "additionalFields": {\n          "mode": "list",\n          "queryParams": "={{$node['Process Onboarding Context'].json.tenant_id}},={{$node['Process Onboarding Context'].json.user_id}}"\n        }\n      },\n      "name": "Check Progress",\n      "type": "n8n-nodes-base.postgres",\n      "credentials": {\n        "postgres": {\n          "id": "supabase-postgres-main",\n          "name": "Supabase Multi-Tenant DB"\n        }\n      },\n      "position": [1600, 400],\n      "id": "check-progress",\n      "notes": "Check current onboarding progress"\n    },\n    {\n      "parameters": {\n        "conditions": {\n          "number": [\n            {\n              "value1": "={{$node['Check Progress'].json[0].completed_items}}",\n              "operation": "smaller",\n              "value2": 2\n            }\n          ]\n        }\n      },\n      "name": "Need Help?",\n      "type": "n8n-nodes-base.if",\n      "position": [1800, 400],\n      "id": "need-help-check",\n      "notes": "Check if user needs additional help"\n    },\n    {\n      "parameters": {\n        "to": "={{$node['Get User & Tenant Info'].json[0].email}}",\n        "subject": "How's your setup going? Let's get you unstuck! 🚀",\n        "html": "<!DOCTYPE html>\\n<html>\\n<head>\\n  <style>\\n    body { font-family: 'Segoe UI', sans-serif; margin: 0; padding: 0; background: #f8fafc; }\\n    .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 20px rgba(0,0,0,0.1); }\\n    .header { background: linear-gradient(135deg, #48bb78 0%, #38a169 100%); color: white; padding: 30px; text-align: center; }\\n    .content { padding: 30px; }\\n    .help-card { background: #f0fff4; border: 1px solid #9ae6b4; padding: 20px; border-radius: 8px; margin: 20px 0; }\\n    .cta-button { background: #48bb78; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block; margin: 10px 5px; }\\n    .progress-items { background: #fafafa; padding: 20px; border-radius: 8px; margin: 20px 0; }\\n  </style>\\n</head>\\n<body>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header\\\">\\n      <h2>🤔 Quick Check-in</h2>\\n      <p>Let's make sure you're getting the most out of {{$node['Get User & Tenant Info'].json[0].tenant_name}}</p>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <p>Hi {{$node['Get User & Tenant Info'].json[0].first_name}},</p>\\n      <p>We noticed you haven't completed some of the initial setup steps yet. No worries - we're here to help you succeed!</p>\\n      \\n      <div class=\\\"progress-items\\\">\\n        <h4>📋 Quick Setup Checklist:</h4>\\n        <p>✅ Account created - You're here!</p>\\n        <p>⏳ Complete your profile</p>\\n        <p>⏳ Verify your email address</p>\\n        <p>⏳ Take the interactive tutorial</p>\\n      </div>\\n      \\n      <div class=\\\"help-card\\\">\\n        <h4>🆘 Need Help?</h4>\\n        <p>Our team is standing by to help you get set up quickly:</p>\\n        <a href=\\\"{{$node['Onboarding Webhook'].json.headers.host || 'https://app.callabo-platform.com'}}/help/getting-started\\\" class=\\\"cta-button\\\">Getting Started Guide</a>\\n        <a href=\\\"{{$node['Onboarding Webhook'].json.headers.host || 'https://app.callabo-platform.com'}}/book-call\\\" class=\\\"cta-button\\\">Schedule a Call</a>\\n      </div>\\n      \\n      <p>Questions? Just reply to this email - we're here to help!</p>\\n    </div>\\n  </div>\\n</body>\\n</html>"\n      },\n      "name": "Send Help Email",\n      "type": "n8n-nodes-base.emailSend",\n      "credentials": {\n        "smtp": {\n          "id": "smtp-service",\n          "name": "SMTP Email Service"\n        }\n      },\n      "position": [2000, 300],\n      "id": "send-help-email",\n      "notes": "Send help email if user is stuck"\n    },\n    {\n      "parameters": {\n        "to": "={{$node['Get User & Tenant Info'].json[0].email}}",\n        "subject": "🎯 Your personalized success roadmap",\n        "html": "<!DOCTYPE html>\\n<html>\\n<head>\\n  <style>\\n    body { font-family: 'Segoe UI', sans-serif; margin: 0; padding: 0; background: #f8fafc; }\\n    .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 20px rgba(0,0,0,0.1); }\\n    .header { background: linear-gradient(135deg, #6f42c1 0%, #495057 100%); color: white; padding: 30px; text-align: center; }\\n    .content { padding: 30px; }\\n    .roadmap-item { background: #f8f9fa; padding: 20px; margin: 15px 0; border-left: 4px solid #6f42c1; border-radius: 5px; }\\n    .cta-button { background: #6f42c1; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block; margin: 10px 0; }\\n  </style>\\n</head>\\n<body>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header\\\">\\n      <h2>🎯 Your Success Roadmap</h2>\\n      <p>Looks like you're making great progress!</p>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <p>Hi {{$node['Get User & Tenant Info'].json[0].first_name}},</p>\\n      <p>Great job on getting started! Here's your personalized roadmap for getting the most out of {{$node['Get User & Tenant Info'].json[0].tenant_name}}:</p>\\n      \\n      <div class=\\\"roadmap-item\\\">\\n        <h4>🚀 Level 1: Master the Basics</h4>\\n        <p>Complete your profile and explore the dashboard to unlock advanced features.</p>\\n      </div>\\n      \\n      {{#if ($node['Process Onboarding Context'].json.is_owner)}}\\n      <div class=\\\"roadmap-item\\\">\\n        <h4>👥 Level 2: Build Your Team</h4>\\n        <p>Invite team members and set up collaboration workflows.</p>\\n      </div>\\n      {{/if}}\\n      \\n      <div class=\\\"roadmap-item\\\">\\n        <h4>🤖 Level 3: Create Your First Agent</h4>\\n        <p>Use our visual workflow builder to create your first AI agent.</p>\\n      </div>\\n      \\n      <div class=\\\"roadmap-item\\\">\\n        <h4>🔗 Level 4: Connect Integrations</h4>\\n        <p>Connect your favorite tools and automate your workflows.</p>\\n      </div>\\n      \\n      <p style=\\\"text-align: center;\\\">\\n        <a href=\\\"{{$node['Onboarding Webhook'].json.headers.host || 'https://app.callabo-platform.com'}}/dashboard?tenant={{$node['Get User & Tenant Info'].json[0].tenant_slug}}\\\" class=\\\"cta-button\\\">Continue Your Journey</a>\\n      </p>\\n    </div>\\n  </div>\\n</body>\\n</html>"\n      },\n      "name": "Send Progress Email",\n      "type": "n8n-nodes-base.emailSend",\n      "credentials": {\n        "smtp": {\n          "id": "smtp-service",\n          "name": "SMTP Email Service"\n        }\n      },\n      "position": [2000, 500],\n      "id": "send-progress-email",\n      "notes": "Send progress encouragement email"\n    },\n    {\n      "parameters": {\n        "amount": 24,\n        "unit": "hours"\n      },\n      "name": "Wait 24 Hours",\n      "type": "n8n-nodes-base.wait",\n      "position": [2200, 400],\n      "id": "wait-24hours",\n      "notes": "Wait before final onboarding email"\n    },\n    {\n      "parameters": {\n        "httpMethod": "POST",\n        "url": "={{$node['Onboarding Webhook'].json.headers.host || 'http://localhost:3000'}}/actions/create-project",\n        "jsonParameters": true,\n        "bodyParametersJson": "={\\n  \\\"input\\\": {\\n    \\\"tenant_id\\\": \\\"{{$node['Process Onboarding Context'].json.tenant_id}}\\\",\\n    \\\"created_by\\\": \\\"{{$node['Process Onboarding Context'].json.user_id}}\\\",\\n    \\\"name\\\": \\\"My First Callabo Project\\\",\\n    \\\"description\\\": \\\"A sample project to get you started with AI agents\\\",\\n    \\\"project_type\\\": \\\"web-app\\\",\\n    \\\"prd_content\\\": \\\"Create a simple chatbot that can answer basic questions about our platform.\\\",\\n    \\\"tech_stack\\\": {\\n      \\\"frontend\\\": \\\"React\\\",\\n      \\\"backend\\\": \\\"Python\\\",\\n      \\\"ai_framework\\\": \\\"Callabo\\\"\\n    },\\n    \\\"auto_setup\\\": true,\\n    \\\"template\\\": \\\"onboarding_sample\\\"\\n  }\\n}",\n        "headers": {\n          "x-hasura-admin-secret": "${HASURA_ADMIN_SECRET}",\n          "Content-Type": "application/json"\n        }\n      },\n      "name": "Create Sample Project",\n      "type": "n8n-nodes-base.httpRequest",\n      "position": [2400, 400],\n      "id": "create-sample-project",\n      "notes": "Create a sample project to help users get started"\n    },\n    {\n      "parameters": {\n        "operation": "update",\n        "table": "user_onboarding",\n        "where": "tenant_id = '{{$node['Process Onboarding Context'].json.tenant_id}}' AND user_id = '{{$node['Process Onboarding Context'].json.user_id}}'",\n        "updateFields": {\n          "status": "email_sequence_completed",\n          "current_step": "{{$node['Process Onboarding Context'].json.total_steps - 1}}",\n          "last_email_sent": "={{new Date().toISOString()}}",\n          "completion_percentage": 85\n        },\n        "additionalFields": {\n          "returnFields": "id,status,current_step,completion_percentage"\n        }\n      },\n      "name": "Update Onboarding Progress",\n      "type": "n8n-nodes-base.postgres",\n      "credentials": {\n        "postgres": {\n          "id": "supabase-postgres-main",\n          "name": "Supabase Multi-Tenant DB"\n        }\n      },\n      "position": [2600, 400],\n      "id": "update-onboarding-progress",\n      "notes": "Mark email sequence as completed"\n    },\n    {\n      "parameters": {\n        "endpoint": "${HASURA_GRAPHQL_ENDPOINT}",\n        "query": "mutation UpdateWorkflowExecution($execution_id: String!, $updates: workflow_executions_set_input!) {\\n  update_workflow_executions(\\n    where: {n8n_execution_id: {_eq: $execution_id}}\\n    _set: $updates\\n  ) {\\n    affected_rows\\n    returning {\\n      id\\n      status\\n      completed_at\\n    }\\n  }\\n}",\n        "variables": {\n          "execution_id": "{{ $execution.id }}",\n          "updates": {\n            "status": "success",\n            "completed_at": "{{ new Date().toISOString() }}",\n            "output_data": "{{ $node['Update Onboarding Progress'].json[0] }}"\n          }\n        },\n        "headers": {\n          "x-hasura-admin-secret": "${HASURA_ADMIN_SECRET}",\n          "Content-Type": "application/json"\n        }\n      },\n      "name": "Complete Workflow Tracking",\n      "type": "n8n-nodes-base.graphql",\n      "credentials": {\n        "httpHeaderAuth": {\n          "id": "hasura-admin",\n          "name": "Hasura Admin Access"\n        }\n      },\n      "position": [2800, 400],\n      "id": "complete-workflow-tracking",\n      "notes": "Mark workflow execution as completed in Hasura"\n    },\n    {\n      "parameters": {\n        "functionCode": "// Prepare final onboarding response\\nconst userInfo = $node['Get User & Tenant Info'].json[0];\\nconst onboardingInfo = $node['Update Onboarding Progress'].json[0];\\nconst sampleProject = $node['Create Sample Project'].json;\\n\\nconst response = {\\n  success: true,\\n  message: 'Onboarding sequence completed successfully',\\n  data: {\\n    user: {\\n      id: userInfo.user_id,\\n      email: userInfo.email,\\n      first_name: userInfo.first_name,\\n      role: userInfo.user_role\\n    },\\n    tenant: {\\n      id: userInfo.tenant_id,\\n      name: userInfo.tenant_name,\\n      slug: userInfo.tenant_slug\\n    },\\n    onboarding: {\\n      id: onboardingInfo.id,\\n      status: onboardingInfo.status,\\n      current_step: onboardingInfo.current_step,\\n      completion_percentage: onboardingInfo.completion_percentage\\n    },\\n    sample_project: sampleProject || null\\n  },\\n  next_steps: {\\n    complete_profile: true,\\n    verify_email: true,\\n    explore_sample_project: !!sampleProject,\\n    invite_team_members: userInfo.user_role === 'owner'\\n  },\\n  metadata: {\\n    workflow_execution_id: $execution.id,\\n    onboarding_type: $node['Process Onboarding Context'].json.onboarding_type,\\n    completed_at: new Date().toISOString()\\n  }\\n};\\n\\nreturn { json: response };"
      },\n      "name": "Prepare Final Response",\n      "type": "n8n-nodes-base.function",\n      "position": [3000, 400],\n      "id": "prepare-final-response",\n      "notes": "Prepare comprehensive onboarding completion response"\n    },\n    {\n      "parameters": {\n        "respondWith": "json",\n        "responseBody": "={{$json}}",\n        "responseHeaders": {\n          "Content-Type": "application/json",\n          "X-Onboarding-Status": "email_sequence_completed",\n          "X-Tenant-ID": "={{$node['Process Onboarding Context'].json.tenant_id}}",\n          "X-User-ID": "={{$node['Process Onboarding Context'].json.user_id}}"\n        },\n        "responseCode": 200\n      },\n      "name": "Onboarding Response",\n      "type": "n8n-nodes-base.respondToWebhook",\n      "position": [3200, 400],\n      "id": "onboarding-response",\n      "notes": "Send successful onboarding completion response"\n    }\n  ],\n  "connections": {\n    "Onboarding Webhook": {\n      "main": [\n        [\n          {\n            "node": "Process Onboarding Context",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Process Onboarding Context": {\n      "main": [\n        [\n          {\n            "node": "Get User & Tenant Info",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Get User & Tenant Info": {\n      "main": [\n        [\n          {\n            "node": "Create/Update Onboarding Record",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Create/Update Onboarding Record": {\n      "main": [\n        [\n          {\n            "node": "Track Workflow Execution",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Track Workflow Execution": {\n      "main": [\n        [\n          {\n            "node": "Send Welcome Email",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Send Welcome Email": {\n      "main": [\n        [\n          {\n            "node": "Wait 2 Hours",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Wait 2 Hours": {\n      "main": [\n        [\n          {\n            "node": "Check Progress",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Check Progress": {\n      "main": [\n        [\n          {\n            "node": "Need Help?",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Need Help?": {\n      "main": [\n        [\n          {\n            "node": "Send Help Email",\n            "type": "main",\n            "index": 0\n          }\n        ],\n        [\n          {\n            "node": "Send Progress Email",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Send Help Email": {\n      "main": [\n        [\n          {\n            "node": "Wait 24 Hours",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Send Progress Email": {\n      "main": [\n        [\n          {\n            "node": "Wait 24 Hours",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Wait 24 Hours": {\n      "main": [\n        [\n          {\n            "node": "Create Sample Project",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Create Sample Project": {\n      "main": [\n        [\n          {\n            "node": "Update Onboarding Progress",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Update Onboarding Progress": {\n      "main": [\n        [\n          {\n            "node": "Complete Workflow Tracking",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Complete Workflow Tracking": {\n      "main": [\n        [\n          {\n            "node": "Prepare Final Response",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Prepare Final Response": {\n      "main": [\n        [\n          {\n            "node": "Onboarding Response",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    }\n  },\n  "settings": {\n    "executionOrder": "v1"\n  },\n  "staticData": null,\n  "tags": [\n    {\n      "id": "multi-tenant",\n      "name": "Multi-Tenant"\n    },\n    {\n      "id": "onboarding",\n      "name": "Onboarding"\n    },\n    {\n      "id": "automation",\n      "name": "Automation"\n    }\n  ],\n  "triggerCount": 1,\n  "updatedAt": "2024-01-01T00:00:00.000Z",\n  "versionId": "2.0.0"\n}